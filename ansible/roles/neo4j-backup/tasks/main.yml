- name: clean up backup dir after upload
  file: path={{learner_user_home}}/backup state=absent

- name: delete learning_graph or language_graph
  #become: yes
  file: path={{learner_user_home}}/{{graph_machine}} state=absent
  
- name: create directory
  #become: yes
  file: path={{learner_user_home}}/{{graph_machine}} state=directory owner={{ learner_user }} group={{ learner_user }} recurse=yes
  
- name: copy template of scripthell script to stop service
  #become: yes
  template: src=backup_script.j2 dest={{learner_user_home}}/backup_script.sh  mode=777 owner={{ learner_user }} group={{ learner_user }}  

- name: run script
  #become: yes
  #become_user: learning
  command: "{{learner_user_home}}/backup_script.sh"
 
- name: clean up databases dir after upload
  file: path={{learner_user_home}}/backup/databases state=absent

- name: ls backup directory
  #become: yes
  #become_user: "{{ learner_user }}"
  command: ls {{learner_user_home}}/backup/
  register: var1

- name: debugging variable
  debug:
    var: var1.stdout

- set_fact:
    neo4j_backup_name: "neo4j_backup_{{ansible_hostname}}_{{ lookup('pipe', 'date +%Z-%Y-%m-%d-%H-%M-%S') }}"
- name: upload to gcs
  include_role:
    name: artifacts-upload-gcp
  vars:
    artifacts_container: "{{ backup_bucket }}/{{ neo4j_backup_folder }}/{{neo4j_backup_name}}"
    artifact_path: "{{learner_user_home}}/backup"
    artifact: "{{ var1.stdout }}"
    service_account: "{{ gcp_backups_service_account }}"

- name: clean up backup dir after upload
  file: path={{learner_user_home}}/backup state=absent
