- name: checking the list of installed services
  service_facts:

- name: Stop the monit
  service: name=monit state=stopped
  become: yes
  when: ansible_facts.services.monit is defined

- name: Stop tomcat
  become: yes
  service: name=tomcat state=stopped
  ignore_errors: yes

- name: Delete Catalina
  become: yes
  file: path={{ tomcat_home }}/conf/Catalina state=absent

- name: Delete existing configuration files
  become: yes
  become_user: "{{learner_user}}"
  file: name=/data/properties/application.conf state=absent

- name: add templates for learning
  become: yes
  become_user: "{{learner_user}}"
  template: src={{ item.name }} dest={{ item.destination }}
  with_items:
    - { name: 'catalina.j2', destination: '{{ tomcat_home }}/bin/catalina.sh' }

- name: Copy application.conf file
  become: yes
  become_user: "{{learner_user}}"
  template: src=application.conf.j2 dest=/data/properties/application.conf mode=755 owner={{ learner_user }} group={{ learner_group }}

- name: Copy trustStoreCerts file
  become: yes
  become_user: "{{learner_user}}"
  template: src=trustStoreCerts.j2 dest=/data/properties/trustStoreCerts mode=755 owner={{ learner_user }} group={{ learner_group }}

- name: Delete existing artifact file from tomcat webapps folder
  become: yes
  become_user: "{{learner_user}}"
  file: name={{learner_user_home}}/apache-tomcat-{{tomcat_major_version}}.{{tomcat_minor_version}}/webapps/learning-service.war state=absent

- name: Copy the artifact files to tomcat webapps folder
  become: yes
  become_user: "{{learner_user}}"
  copy: src=learning-service.war dest={{learner_user_home}}/apache-tomcat-{{tomcat_major_version}}.{{tomcat_minor_version}}/webapps

- name: Remove learning-service folder from tomcat webapps
  become: yes
  file: name={{learner_user_home}}/apache-tomcat-{{tomcat_major_version}}.{{tomcat_minor_version}}/webapps/learning-service state=absent

- name: Start tomcat
  become: yes
  service: name=tomcat state=started
  delay: 10

- name: Check learning-service health
  become: yes
  become_user: "{{learner_user}}"
  shell: "curl http://{{ learner_service_url }}/learning-service/health | grep \"healthy\":false | wc -l"
  register: learning_process

- name: Print the health status to console
  debug:
    var: learning_process

- name: Failed learning-service health check
  become: yes
  become_user: "{{learner_user}}"
  fail: msg="Health check failed for learning-service"
  when: "learning_process.stdout >= '1'"

- name: Start the monit
  service: name=monit state=started
  become: yes
  when: ansible_facts.services.monit is defined
